import type { Translations } from "./en"

const ko: Translations = {
  common: {
    ok: "확인!",
    cancel: "취소",
    back: "뒤로",
    logOut: "로그아웃",
    confirm: "",
    errorUnexpectedTitle: "",
    errorUnexpected: "",
    tryAgain: "",
    congrats: "",
    sessionExpired: "",
    sessionExpiredMsg: "",
    proceed: "",
    permissionDenied: "",
    close: "",
    loginAgain: "",
  },
  welcomeScreen: {
    postscript:
      "잠깐! — 지금 보시는 것은 아마도 당신의 앱의 모양새가 아닐겁니다. (디자이너분이 이렇게 건내주셨다면 모를까요. 만약에 그렇다면, 이대로 가져갑시다!) ",
    readyForLaunch: "출시 준비가 거의 끝난 나만의 앱!",
    exciting: "(오, 이거 신나는데요!)",
    letsGo: "가보자구요!",
    continueAs: "",
  },
  errorScreen: {
    title: "뭔가 잘못되었습니다!",
    friendlySubtitle:
      "이 화면은 오류가 발생할 때 프로덕션에서 사용자에게 표시됩니다. 이 메시지를 커스터마이징 할 수 있고(해당 파일은 `app/i18n/ko.ts` 에 있습니다) 레이아웃도 마찬가지로 수정할 수 있습니다(`app/screens/error`). 만약 이 오류화면을 완전히 없에버리고 싶다면 `app/app.tsx` 파일에서 <ErrorBoundary> 컴포넌트를 확인하기 바랍니다.",
    reset: "초기화",
    traceTitle: "%{name} 스택에서의 오류",
  },
  emptyStateComponent: {
    generic: {
      heading: "너무 텅 비어서.. 너무 슬퍼요..",
      content: "데이터가 없습니다. 버튼을 눌러서 리프레쉬 하시거나 앱을 리로드하세요.",
      button: "다시 시도해봅시다",
    },
  },
  errors: {
    invalidEmail: "잘못된 이메일 주소 입니다.",
  },
  loginScreen: {
    signIn: "로그인",
    enterDetails:
      "일급비밀 정보를 해제하기 위해 상세 정보를 입력하세요. 무엇이 기다리고 있는지 절대 모를겁니다. 혹은 알 수 있을지도 모르겠군요. 엄청 복잡한 뭔가는 아닙니다.",
    emailFieldLabel: "이메일",
    passwordFieldLabel: "비밀번호",
    emailFieldPlaceholder: "이메일을 입력하세요",
    passwordFieldPlaceholder: "엄청 비밀스러운 암호를 입력하세요",
    tapToSignIn: "눌러서 로그인 하기!",
    hint: "힌트: 가장 좋아하는 암호와 아무런 아무 이메일 주소나 사용할 수 있어요 :)",
    google: "",
    apple: "",
    joinSentence: "",
    errors: {
      authError: "",
      mailError: "",
      mailErrorDesc: "",
    },
  },
  signUpScreen: {
    headline: "Account informations",
    step1: "step 1  of 2",
    step2: "step 2  of 2",
    fullName: "Full name",
    next: "Next, your personal informations",
    headline2: "Personal information",
    pickRole: "Pick a role",
    developer: "Full-Stack Developer",
    techLead: "Tech Lead",
    chooseDate: "Start date",
    startdate: "Choose a starting date",
    balance: "Available balance",
    create: "Create my account",
    back: "Back, my account informations",
    firstHeadline: "Curated tools",
    secondHeadline: "to gear you up!",
    subtitle: "Join Theodo’s worktools initiative to get you suited up for your daily tasks.",
    join: "Join",
    signIn: "Sign In",
    Errors: {
      emailRequired: "Email is required.",
      emailNotValid: "Enter a valid email address.",
      pwdRequired: "Password is required.",
      pwdNotValid: "Password must be at least 6 characters.",
    },
    selectRole: "Please select a role.",
    pickDate: "Please pick a date.",
    userExistsMsg: "An account with this email already exists. Please log in or use another email.",
  },
  dashboardScreen: {
    fetchUserError: "An error occurred while fetching user",
    fetchPurchaseError: "An error occurred while fetching purchases",
    purchasesListTitle: "Purchases",
    purchased: "Purchased",
    noPurchases: "No purchases for this account",
    purchases: "Purchases",
  },
  addProductScreen: {
    congrats: "Congratulations",
    congratsMsg: "Your purchase has been added successfully.",
    goToList: "Go to product List",
    invalidTypes: "Invalid file type",
    invalidTypesDesc: "Only JPEG and PNG are supported.",
    backToForm: "Go back to my form",
    multipleImages: "Add multiple photos",
    qualityNote:
      "Adding more high-resolution photos will help the platform stay consistent and evolve in terms of products imagery.",
    fillForm: "Fill the form before submitting",
  },
  productScreen: {
    brand: "Brand",
    model: "Model",
    store: "Store",
    purchaseDate: "Purchase Date",
    price: "Price",
    purchased: "✓ Purchased",
    invoiceMedia: "Invoice and media",
    review: "Review",
    rateAction: "How would you rate this product?",
    rateText:
      "Rating this product will help other Theodoers make the right choice in terms of gear.",
  },
  profileScreen: {
    userInfo: {
      title: "Theodoer information",
      email: "Email",
      password: "Password",
      role: "Role",
    },
    notification: {
      title: "Notifications",
      mail: "Mail notifications",
      approval: "Approval/Refusal notifications",
      actionCheck: "Tick this box if you wish to receive notifications about your order status",
    },
    editInfo: "Edit your info",
  },
  mainTabNavigator: {
    dashboardTab: "Dashboard",
    coworkersTab: "Coworkers",
    getInspiredTab: "Get inspired",
    profileTab: "Profile",
  },
  header: {
    balance: "",
    total: "",
    balanceInfo: "",
    totalInfo: "",
  },
}

export default ko
